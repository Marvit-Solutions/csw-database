-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.class_user_plans
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id integer NOT NULL,
    plan_id integer NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    slug character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT class_user_plans_pkey PRIMARY KEY (id),
    CONSTRAINT class_user_plan_uq UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.class_users
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    slug character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT class_users_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.exercise_answers
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    submission_id integer NOT NULL,
    choice_id integer,
    is_marked boolean NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT exercise_answers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.exercise_choices
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    question_id integer NOT NULL,
    content text COLLATE pg_catalog."default" NOT NULL,
    score integer NOT NULL,
    is_correct boolean NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT exercise_choices_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.exercise_question_media
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    exercise_question_id integer NOT NULL,
    media_id integer NOT NULL,
    index integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT exercise_question_media_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.exercise_questions
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    exercise_id integer NOT NULL,
    content text COLLATE pg_catalog."default" NOT NULL,
    score integer NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT exercise_questions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.exercise_submissions
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id integer NOT NULL,
    exercise_id integer NOT NULL,
    started_at timestamp with time zone NOT NULL,
    finished_at timestamp with time zone NOT NULL,
    time_required time without time zone NOT NULL,
    score integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT exercise_submissions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.exercises
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    test_type_id integer NOT NULL,
    module_id integer NOT NULL,
    title character varying(50) COLLATE pg_catalog."default" NOT NULL,
    total_question integer NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    "time" integer NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT exercises_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.medias
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    filename character varying(255) COLLATE pg_catalog."default" NOT NULL,
    mime character varying(50) COLLATE pg_catalog."default" NOT NULL,
    original_filename character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT medias_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.mentors
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id integer NOT NULL,
    module_id integer NOT NULL,
    short_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    motto character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT mentors_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.modules
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    slug character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT modules_pkey PRIMARY KEY (id),
    CONSTRAINT module_uq UNIQUE (name)
        INCLUDE(name)
);

CREATE TABLE IF NOT EXISTS public.plans
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    media_id integer NOT NULL,
    module_id integer NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    slug character varying(50) COLLATE pg_catalog."default" NOT NULL,
    price numeric NOT NULL,
    "group" boolean NOT NULL,
    exercise bigint NOT NULL,
    access bigint NOT NULL,
    module boolean NOT NULL,
    try_out bigint NOT NULL,
    zoom boolean NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT plans_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.quiz_answers
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    submission_id integer NOT NULL,
    choice_id integer,
    is_marked boolean NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT quiz_answers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.quiz_choices
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    question_id integer NOT NULL,
    content text COLLATE pg_catalog."default" NOT NULL,
    score integer NOT NULL,
    is_correct boolean NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT quiz_choices_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.quiz_question_media
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    quiz_question_id integer NOT NULL,
    media_id integer NOT NULL,
    index integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT quiz_question_media_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.quiz_questions
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    quiz_id integer NOT NULL,
    content text COLLATE pg_catalog."default" NOT NULL,
    score integer NOT NULL,
    explanation text COLLATE pg_catalog."default" NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT quiz_questions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.quiz_submissions
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id integer NOT NULL,
    quiz_id integer NOT NULL,
    started_at timestamp with time zone NOT NULL,
    finished_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    time_required time without time zone NOT NULL,
    score integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT quiz_submissions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.quizzes
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    subject_id integer NOT NULL,
    test_type_id integer NOT NULL,
    open timestamp with time zone NOT NULL,
    close timestamp with time zone NOT NULL,
    title character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    "time" integer NOT NULL,
    max_score integer NOT NULL,
    attempt integer NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT quizzes_pkey PRIMARY KEY (id),
    CONSTRAINT quiz_uq UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    slug character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT role_uq UNIQUE (name)
        INCLUDE(name)
);

CREATE TABLE IF NOT EXISTS public.schedules
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    sub_subject_id integer NOT NULL,
    class_user_plan_id integer NOT NULL,
    meeting_date timestamp with time zone NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT schedules_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.schema_migrations
(
    version bigint NOT NULL,
    dirty boolean NOT NULL,
    CONSTRAINT schema_migrations_pkey PRIMARY KEY (version)
);

CREATE TABLE IF NOT EXISTS public.sub_modules
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    module_id integer NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    slug character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT sub_modules_pkey PRIMARY KEY (id),
    CONSTRAINT sub_module_uq UNIQUE (name)
        INCLUDE(name)
);

CREATE TABLE IF NOT EXISTS public.sub_subject_media
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    sub_subject_id integer NOT NULL,
    media_id integer NOT NULL,
    index integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT sub_subject_media_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sub_subjects
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    subject_id integer NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    slug character varying(50) COLLATE pg_catalog."default" NOT NULL,
    content text COLLATE pg_catalog."default" NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT sub_subjects_pkey PRIMARY KEY (id),
    CONSTRAINT sub_subject_uq UNIQUE (name, content)
);

CREATE TABLE IF NOT EXISTS public.subjects
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    sub_module_id integer NOT NULL,
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    slug character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created_by integer NOT NULL,
    updated_by integer NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT subjects_pkey PRIMARY KEY (id),
    CONSTRAINT subject_uq UNIQUE (name)
        INCLUDE(name)
);

CREATE TABLE IF NOT EXISTS public.test_types
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    slug character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT test_types_pkey PRIMARY KEY (id),
    CONSTRAINT test_type_uq UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.uniques
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    mentor_id integer NOT NULL,
    uniqueness text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT uniques_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_details
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    class_user_id integer NOT NULL,
    user_id integer NOT NULL,
    media_id integer,
    name character varying(1000) COLLATE pg_catalog."default" NOT NULL,
    province character varying(100) COLLATE pg_catalog."default" NOT NULL,
    regency character varying(255) COLLATE pg_catalog."default" NOT NULL,
    district character varying(255) COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying(50) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT user_details_pkey PRIMARY KEY (id),
    CONSTRAINT user_details_uq UNIQUE (phone_number)
);

CREATE TABLE IF NOT EXISTS public.user_mentor_testimonials
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id integer NOT NULL,
    mentor_id integer NOT NULL,
    comment text COLLATE pg_catalog."default" NOT NULL,
    rating numeric NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT user_mentor_testimonials_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_testimonials
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    user_id integer NOT NULL,
    comment text COLLATE pg_catalog."default" NOT NULL,
    rating numeric NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT user_testimonials_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    uuid uuid NOT NULL DEFAULT uuid_generate_v4(),
    role_id integer NOT NULL,
    google_id integer,
    facebook_id integer,
    email character varying(64) COLLATE pg_catalog."default" NOT NULL,
    password text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_at timestamp with time zone,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email)
);

ALTER TABLE IF EXISTS public.class_user_plans
    ADD CONSTRAINT plan_class_user_plan_fk FOREIGN KEY (plan_id)
    REFERENCES public.plans (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.class_user_plans
    ADD CONSTRAINT user_class_user_plan_fk FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.exercise_answers
    ADD CONSTRAINT choice_exercise_answer_fk FOREIGN KEY (choice_id)
    REFERENCES public.exercise_choices (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.exercise_choices
    ADD CONSTRAINT question_exercise_choice_fk FOREIGN KEY (question_id)
    REFERENCES public.exercise_questions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.exercise_question_media
    ADD CONSTRAINT exercise_question_exercise_question_media FOREIGN KEY (exercise_question_id)
    REFERENCES public.exercise_questions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.exercise_question_media
    ADD CONSTRAINT media_exercise_question_media FOREIGN KEY (media_id)
    REFERENCES public.medias (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.exercise_questions
    ADD CONSTRAINT exercise_exercise_question_fk FOREIGN KEY (exercise_id)
    REFERENCES public.exercises (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.exercise_submissions
    ADD CONSTRAINT exercise_exercise_submissiion FOREIGN KEY (exercise_id)
    REFERENCES public.exercises (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.exercise_submissions
    ADD CONSTRAINT user_exercise_submission FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.exercises
    ADD CONSTRAINT module_exercise_fk FOREIGN KEY (module_id)
    REFERENCES public.modules (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.exercises
    ADD CONSTRAINT test_type_exercise_fk FOREIGN KEY (test_type_id)
    REFERENCES public.test_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.mentors
    ADD CONSTRAINT module_mentor_fk FOREIGN KEY (module_id)
    REFERENCES public.modules (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.mentors
    ADD CONSTRAINT user_mentor_fk FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.plans
    ADD CONSTRAINT media_plan_fk FOREIGN KEY (media_id)
    REFERENCES public.medias (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.plans
    ADD CONSTRAINT module_plan_fk FOREIGN KEY (module_id)
    REFERENCES public.modules (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.quiz_answers
    ADD CONSTRAINT choice_quiz_answer_fk FOREIGN KEY (choice_id)
    REFERENCES public.quiz_choices (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.quiz_answers
    ADD CONSTRAINT submission_quiz_answer_fk FOREIGN KEY (submission_id)
    REFERENCES public.quiz_submissions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.quiz_choices
    ADD CONSTRAINT question_quiz_choice_fk FOREIGN KEY (question_id)
    REFERENCES public.quiz_questions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.quiz_question_media
    ADD CONSTRAINT media_quiz_question_media FOREIGN KEY (media_id)
    REFERENCES public.medias (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.quiz_question_media
    ADD CONSTRAINT quiz_question_quiz_question_media FOREIGN KEY (quiz_question_id)
    REFERENCES public.quiz_questions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.quiz_questions
    ADD CONSTRAINT quiz_quiz_question_fk FOREIGN KEY (quiz_id)
    REFERENCES public.quizzes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.quiz_submissions
    ADD CONSTRAINT quiz_quiz_submission_fk FOREIGN KEY (quiz_id)
    REFERENCES public.quizzes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.quiz_submissions
    ADD CONSTRAINT user_quiz_submission_fk FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.quizzes
    ADD CONSTRAINT subject_quiz_fk FOREIGN KEY (subject_id)
    REFERENCES public.subjects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.quizzes
    ADD CONSTRAINT test_type_quiz_fk FOREIGN KEY (test_type_id)
    REFERENCES public.test_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.schedules
    ADD CONSTRAINT class_user_plan_schedule_fk FOREIGN KEY (class_user_plan_id)
    REFERENCES public.class_user_plans (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.schedules
    ADD CONSTRAINT sub_subject_schedule_fk FOREIGN KEY (sub_subject_id)
    REFERENCES public.sub_subjects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sub_modules
    ADD CONSTRAINT module_sub_module_fk FOREIGN KEY (module_id)
    REFERENCES public.modules (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sub_subject_media
    ADD CONSTRAINT media_sub_subject_media FOREIGN KEY (media_id)
    REFERENCES public.medias (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sub_subject_media
    ADD CONSTRAINT sub_subject_sub_subject_media FOREIGN KEY (sub_subject_id)
    REFERENCES public.sub_subjects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sub_subjects
    ADD CONSTRAINT subject_sub_subject_fk FOREIGN KEY (subject_id)
    REFERENCES public.subjects (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.subjects
    ADD CONSTRAINT sub_module_subject_fk FOREIGN KEY (sub_module_id)
    REFERENCES public.sub_modules (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.uniques
    ADD CONSTRAINT mentor_unique_fk FOREIGN KEY (mentor_id)
    REFERENCES public.mentors (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_details
    ADD CONSTRAINT class_user_user_detail_fk FOREIGN KEY (class_user_id)
    REFERENCES public.class_users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_details
    ADD CONSTRAINT media_user_fk FOREIGN KEY (media_id)
    REFERENCES public.medias (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_details
    ADD CONSTRAINT user_user_detail_fk FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_mentor_testimonials
    ADD CONSTRAINT mentor_user_mentor_testimonial_fk FOREIGN KEY (mentor_id)
    REFERENCES public.mentors (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_mentor_testimonials
    ADD CONSTRAINT user_user_mentor_testimonial_fk FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_testimonials
    ADD CONSTRAINT user_user_testimonial_fk FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT role_user_fk FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;